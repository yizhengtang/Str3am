/// <reference types="node" />
import { RegistryItem } from '../RegistryItem';
import { DataItem } from '../lib';
import { KeyDerivation } from './KeyDerivation';
export declare enum QRHardwareCallType {
    KeyDerivation = 0
}
export declare enum QRHardwareCallVersion {
    V0 = 0,
    V1 = 1
}
declare type QRHardwareCallParams = KeyDerivation;
export declare class QRHardwareCall extends RegistryItem {
    private type;
    private params;
    private origin?;
    private version?;
    getRegistryType: () => import("../RegistryType").RegistryType;
    constructor(type: QRHardwareCallType, params: QRHardwareCallParams, origin?: string, version?: QRHardwareCallVersion);
    getType: () => number;
    getParams: () => QRHardwareCallParams;
    getOrigin: () => string | undefined;
    getVersion: () => QRHardwareCallVersion | undefined;
    toDataItem: () => DataItem;
    static fromDataItem: (dataItem: DataItem) => QRHardwareCall;
    static fromCBOR: (_cborPayload: Buffer) => QRHardwareCall;
}
export {};
