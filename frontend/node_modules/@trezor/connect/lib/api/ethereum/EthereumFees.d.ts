import { Blockchain } from '../../backend/BlockchainLink';
import type { EthereumNetworkInfo, FeeLevel } from '../../types';
import { Blocks, MiscFeeLevels } from '../common/MiscFees';
export declare class EthereumFeeLevels extends MiscFeeLevels {
    coinInfo: EthereumNetworkInfo;
    levels: FeeLevel[];
    blocks: Blocks;
    constructor(coinInfo: EthereumNetworkInfo);
    load(blockchain: Blockchain, request: Parameters<typeof blockchain.estimateFee>[0]): Promise<{
        feePerTx?: string | undefined;
        feeLimit?: string | undefined;
        baseFeePerGas?: string | undefined;
        maxFeePerGas?: string | undefined;
        maxPriorityFeePerGas?: string | undefined;
        maxWaitTimeEstimate?: number | undefined;
        label: "normal" | "custom" | "high" | "economy" | "low";
        blocks: number;
        feePerUnit: string;
    }[]>;
}
//# sourceMappingURL=EthereumFees.d.ts.map