/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { type Codec, type Decoder, type Encoder, type GetDiscriminatedUnionVariant, type GetDiscriminatedUnionVariantContent } from '@solana/kit';
import { type Meta, type MetaArgs, type Stake, type StakeArgs } from '.';
export type StakeState = {
    __kind: 'Uninitialized';
} | {
    __kind: 'Initialized';
    fields: readonly [Meta];
} | {
    __kind: 'Stake';
    fields: readonly [Meta, Stake];
} | {
    __kind: 'RewardsPool';
};
export type StakeStateArgs = {
    __kind: 'Uninitialized';
} | {
    __kind: 'Initialized';
    fields: readonly [MetaArgs];
} | {
    __kind: 'Stake';
    fields: readonly [MetaArgs, StakeArgs];
} | {
    __kind: 'RewardsPool';
};
export declare function getStakeStateEncoder(): Encoder<StakeStateArgs>;
export declare function getStakeStateDecoder(): Decoder<StakeState>;
export declare function getStakeStateCodec(): Codec<StakeStateArgs, StakeState>;
export declare function stakeState(kind: 'Uninitialized'): GetDiscriminatedUnionVariant<StakeStateArgs, '__kind', 'Uninitialized'>;
export declare function stakeState(kind: 'Initialized', data: GetDiscriminatedUnionVariantContent<StakeStateArgs, '__kind', 'Initialized'>['fields']): GetDiscriminatedUnionVariant<StakeStateArgs, '__kind', 'Initialized'>;
export declare function stakeState(kind: 'Stake', data: GetDiscriminatedUnionVariantContent<StakeStateArgs, '__kind', 'Stake'>['fields']): GetDiscriminatedUnionVariant<StakeStateArgs, '__kind', 'Stake'>;
export declare function stakeState(kind: 'RewardsPool'): GetDiscriminatedUnionVariant<StakeStateArgs, '__kind', 'RewardsPool'>;
export declare function isStakeState<K extends StakeState['__kind']>(kind: K, value: StakeState): value is StakeState & {
    __kind: K;
};
//# sourceMappingURL=stakeState.d.ts.map