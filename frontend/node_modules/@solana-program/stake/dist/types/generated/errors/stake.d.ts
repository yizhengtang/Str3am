/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { type Address, type SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM, type SolanaError } from '@solana/kit';
export declare const STAKE_ERROR__NO_CREDITS_TO_REDEEM = 0;
export declare const STAKE_ERROR__LOCKUP_IN_FORCE = 1;
export declare const STAKE_ERROR__ALREADY_DEACTIVATED = 2;
export declare const STAKE_ERROR__TOO_SOON_TO_REDELEGATE = 3;
export declare const STAKE_ERROR__INSUFFICIENT_STAKE = 4;
export declare const STAKE_ERROR__MERGE_TRANSIENT_STAKE = 5;
export declare const STAKE_ERROR__MERGE_MISMATCH = 6;
export declare const STAKE_ERROR__CUSTODIAN_MISSING = 7;
export declare const STAKE_ERROR__CUSTODIAN_SIGNATURE_MISSING = 8;
export declare const STAKE_ERROR__INSUFFICIENT_REFERENCE_VOTES = 9;
export declare const STAKE_ERROR__VOTE_ADDRESS_MISMATCH = 10;
export declare const STAKE_ERROR__MINIMUM_DELINQUENT_EPOCHS_FOR_DEACTIVATION_NOT_MET = 11;
export declare const STAKE_ERROR__INSUFFICIENT_DELEGATION = 12;
export declare const STAKE_ERROR__REDELEGATE_TRANSIENT_OR_INACTIVE_STAKE = 13;
export declare const STAKE_ERROR__REDELEGATE_TO_SAME_VOTE_ACCOUNT = 14;
export declare const STAKE_ERROR__REDELEGATED_STAKE_MUST_FULLY_ACTIVATE_BEFORE_DEACTIVATION_IS_PERMITTED = 15;
export declare const STAKE_ERROR__EPOCH_REWARDS_ACTIVE = 16;
export type StakeError = typeof STAKE_ERROR__ALREADY_DEACTIVATED | typeof STAKE_ERROR__CUSTODIAN_MISSING | typeof STAKE_ERROR__CUSTODIAN_SIGNATURE_MISSING | typeof STAKE_ERROR__EPOCH_REWARDS_ACTIVE | typeof STAKE_ERROR__INSUFFICIENT_DELEGATION | typeof STAKE_ERROR__INSUFFICIENT_REFERENCE_VOTES | typeof STAKE_ERROR__INSUFFICIENT_STAKE | typeof STAKE_ERROR__LOCKUP_IN_FORCE | typeof STAKE_ERROR__MERGE_MISMATCH | typeof STAKE_ERROR__MERGE_TRANSIENT_STAKE | typeof STAKE_ERROR__MINIMUM_DELINQUENT_EPOCHS_FOR_DEACTIVATION_NOT_MET | typeof STAKE_ERROR__NO_CREDITS_TO_REDEEM | typeof STAKE_ERROR__REDELEGATED_STAKE_MUST_FULLY_ACTIVATE_BEFORE_DEACTIVATION_IS_PERMITTED | typeof STAKE_ERROR__REDELEGATE_TO_SAME_VOTE_ACCOUNT | typeof STAKE_ERROR__REDELEGATE_TRANSIENT_OR_INACTIVE_STAKE | typeof STAKE_ERROR__TOO_SOON_TO_REDELEGATE | typeof STAKE_ERROR__VOTE_ADDRESS_MISMATCH;
export declare function getStakeErrorMessage(code: StakeError): string;
export declare function isStakeError<TProgramErrorCode extends StakeError>(error: unknown, transactionMessage: {
    instructions: Record<number, {
        programAddress: Address;
    }>;
}, code?: TProgramErrorCode): error is SolanaError<typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM> & Readonly<{
    context: Readonly<{
        code: TProgramErrorCode;
    }>;
}>;
//# sourceMappingURL=stake.d.ts.map