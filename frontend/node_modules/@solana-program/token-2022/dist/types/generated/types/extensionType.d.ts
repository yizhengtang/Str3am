/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { type Codec, type Decoder, type Encoder } from '@solana/kit';
/**
 * Extensions that can be applied to mints or accounts.  Mint extensions must
 * only be applied to mint accounts, and account extensions must only be
 * applied to token holding accounts.
 */
export declare enum ExtensionType {
    Uninitialized = 0,
    TransferFeeConfig = 1,
    TransferFeeAmount = 2,
    MintCloseAuthority = 3,
    ConfidentialTransferMint = 4,
    ConfidentialTransferAccount = 5,
    DefaultAccountState = 6,
    ImmutableOwner = 7,
    MemoTransfer = 8,
    NonTransferable = 9,
    InterestBearingConfig = 10,
    CpiGuard = 11,
    PermanentDelegate = 12,
    NonTransferableAccount = 13,
    TransferHook = 14,
    TransferHookAccount = 15,
    ConfidentialTransferFee = 16,
    ConfidentialTransferFeeAmount = 17,
    ScaledUiAmountConfig = 18,
    MetadataPointer = 19,
    TokenMetadata = 20,
    GroupPointer = 21,
    TokenGroup = 22,
    GroupMemberPointer = 23,
    TokenGroupMember = 24
}
export type ExtensionTypeArgs = ExtensionType;
export declare function getExtensionTypeEncoder(): Encoder<ExtensionTypeArgs>;
export declare function getExtensionTypeDecoder(): Decoder<ExtensionType>;
export declare function getExtensionTypeCodec(): Codec<ExtensionTypeArgs, ExtensionType>;
//# sourceMappingURL=extensionType.d.ts.map